{"version":3,"file":"ggvega.js","sources":["../js/VlSpec.js","../js/Encoding.js","../js/LayerSpec.js","../js/compile.js"],"sourcesContent":["/**\r\n * The alignment to apply to symbol legends rows and columns. The supported string values\r\n * are `\"all\"`, `\"each\"` (the default), and `none`. For more information, see the [grid\r\n * layout documentation](https://vega.github.io/vega/docs/layout).\r\n *\r\n * __Default value:__ `\"each\"`.\r\n */\r\nexport var LayoutAlign;\r\n(function (LayoutAlign) {\r\n    LayoutAlign[\"All\"] = \"all\";\r\n    LayoutAlign[\"Each\"] = \"each\";\r\n    LayoutAlign[\"None\"] = \"none\";\r\n})(LayoutAlign || (LayoutAlign = {}));\r\n/**\r\n * Determines how size calculation should be performed, one of `\"content\"` or `\"padding\"`.\r\n * The default setting (`\"content\"`) interprets the width and height settings as the data\r\n * rectangle (plotting) dimensions, to which padding is then added. In contrast, the\r\n * `\"padding\"` setting includes the padding within the view size calculations, such that the\r\n * width and height settings indicate the **total** intended size of the view.\r\n *\r\n * __Default value__: `\"content\"`\r\n */\r\nexport var Contains;\r\n(function (Contains) {\r\n    Contains[\"Content\"] = \"content\";\r\n    Contains[\"Padding\"] = \"padding\";\r\n})(Contains || (Contains = {}));\r\n/**\r\n * The sizing format type. One of `\"pad\"`, `\"fit\"` or `\"none\"`. See the [autosize\r\n * type](https://vega.github.io/vega-lite/docs/size.html#autosize) documentation for\r\n * descriptions of each.\r\n *\r\n * __Default value__: `\"pad\"`\r\n */\r\nexport var AutosizeType;\r\n(function (AutosizeType) {\r\n    AutosizeType[\"Fit\"] = \"fit\";\r\n    AutosizeType[\"None\"] = \"none\";\r\n    AutosizeType[\"Pad\"] = \"pad\";\r\n})(AutosizeType || (AutosizeType = {}));\r\n/**\r\n * The bounds calculation method to use for determining the extent of a sub-plot. One of\r\n * `full` (the default) or `flush`.\r\n *\r\n * - If set to `full`, the entire calculated bounds (including axes, title, and legend) will\r\n * be used.\r\n * - If set to `flush`, only the specified width and height values for the sub-view will be\r\n * used. The `flush` setting can be useful when attempting to place sub-plots without axes\r\n * or legends into a uniform grid structure.\r\n *\r\n * __Default value:__ `\"full\"`\r\n */\r\nexport var BoundsEnum;\r\n(function (BoundsEnum) {\r\n    BoundsEnum[\"Flush\"] = \"flush\";\r\n    BoundsEnum[\"Full\"] = \"full\";\r\n})(BoundsEnum || (BoundsEnum = {}));\r\n/**\r\n * Type of input data: `\"json\"`, `\"csv\"`, `\"tsv\"`, `\"dsv\"`.\r\n *\r\n * __Default value:__  The default format type is determined by the extension of the file\r\n * URL.\r\n * If no extension is detected, `\"json\"` will be used by default.\r\n */\r\nexport var DataFormatType;\r\n(function (DataFormatType) {\r\n    DataFormatType[\"Csv\"] = \"csv\";\r\n    DataFormatType[\"Dsv\"] = \"dsv\";\r\n    DataFormatType[\"Json\"] = \"json\";\r\n    DataFormatType[\"Topojson\"] = \"topojson\";\r\n    DataFormatType[\"Tsv\"] = \"tsv\";\r\n})(DataFormatType || (DataFormatType = {}));\r\n/**\r\n * An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to\r\n * perform on the field prior to sorting (e.g., `\"count\"`, `\"mean\"` and `\"median\"`).\r\n * An aggregation is required when there are multiple values of the sort field for each\r\n * encoded data field.\r\n * The input data objects will be aggregated, grouped by the encoded data field.\r\n *\r\n * For a full list of operations, please see the documentation for\r\n * [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\r\n *\r\n * __Default value:__ `\"sum\"` for stacked plots. Otherwise, `\"mean\"`.\r\n *\r\n * The aggregation operation to apply to the fields (e.g., sum, average or count).\r\n * See the [full list of supported aggregation\r\n * operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\r\n * for more information.\r\n *\r\n * The aggregation operation to apply (e.g., sum, average or count). See the list of all\r\n * supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\r\n */\r\nexport var AggregateOp;\r\n(function (AggregateOp) {\r\n    AggregateOp[\"Argmax\"] = \"argmax\";\r\n    AggregateOp[\"Argmin\"] = \"argmin\";\r\n    AggregateOp[\"Average\"] = \"average\";\r\n    AggregateOp[\"Ci0\"] = \"ci0\";\r\n    AggregateOp[\"Ci1\"] = \"ci1\";\r\n    AggregateOp[\"Count\"] = \"count\";\r\n    AggregateOp[\"Distinct\"] = \"distinct\";\r\n    AggregateOp[\"Max\"] = \"max\";\r\n    AggregateOp[\"Mean\"] = \"mean\";\r\n    AggregateOp[\"Median\"] = \"median\";\r\n    AggregateOp[\"Min\"] = \"min\";\r\n    AggregateOp[\"Missing\"] = \"missing\";\r\n    AggregateOp[\"Q1\"] = \"q1\";\r\n    AggregateOp[\"Q3\"] = \"q3\";\r\n    AggregateOp[\"Stderr\"] = \"stderr\";\r\n    AggregateOp[\"Stdev\"] = \"stdev\";\r\n    AggregateOp[\"Stdevp\"] = \"stdevp\";\r\n    AggregateOp[\"Sum\"] = \"sum\";\r\n    AggregateOp[\"Valid\"] = \"valid\";\r\n    AggregateOp[\"Values\"] = \"values\";\r\n    AggregateOp[\"Variance\"] = \"variance\";\r\n    AggregateOp[\"Variancep\"] = \"variancep\";\r\n})(AggregateOp || (AggregateOp = {}));\r\n/**\r\n * Time unit for the field to be filtered.\r\n *\r\n * Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\r\n * or [a temporal field that gets casted as\r\n * ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\r\n *\r\n * __Default value:__ `undefined` (None)\r\n *\r\n * The timeUnit.\r\n */\r\nexport var TimeUnit;\r\n(function (TimeUnit) {\r\n    TimeUnit[\"Date\"] = \"date\";\r\n    TimeUnit[\"Day\"] = \"day\";\r\n    TimeUnit[\"Hours\"] = \"hours\";\r\n    TimeUnit[\"Hoursminutes\"] = \"hoursminutes\";\r\n    TimeUnit[\"Hoursminutesseconds\"] = \"hoursminutesseconds\";\r\n    TimeUnit[\"Milliseconds\"] = \"milliseconds\";\r\n    TimeUnit[\"Minutes\"] = \"minutes\";\r\n    TimeUnit[\"Minutesseconds\"] = \"minutesseconds\";\r\n    TimeUnit[\"Month\"] = \"month\";\r\n    TimeUnit[\"Monthdate\"] = \"monthdate\";\r\n    TimeUnit[\"Monthdatehours\"] = \"monthdatehours\";\r\n    TimeUnit[\"Quarter\"] = \"quarter\";\r\n    TimeUnit[\"Quartermonth\"] = \"quartermonth\";\r\n    TimeUnit[\"Seconds\"] = \"seconds\";\r\n    TimeUnit[\"Secondsmilliseconds\"] = \"secondsmilliseconds\";\r\n    TimeUnit[\"Utcdate\"] = \"utcdate\";\r\n    TimeUnit[\"Utcday\"] = \"utcday\";\r\n    TimeUnit[\"Utchours\"] = \"utchours\";\r\n    TimeUnit[\"Utchoursminutes\"] = \"utchoursminutes\";\r\n    TimeUnit[\"Utchoursminutesseconds\"] = \"utchoursminutesseconds\";\r\n    TimeUnit[\"Utcmilliseconds\"] = \"utcmilliseconds\";\r\n    TimeUnit[\"Utcminutes\"] = \"utcminutes\";\r\n    TimeUnit[\"Utcminutesseconds\"] = \"utcminutesseconds\";\r\n    TimeUnit[\"Utcmonth\"] = \"utcmonth\";\r\n    TimeUnit[\"Utcmonthdate\"] = \"utcmonthdate\";\r\n    TimeUnit[\"Utcmonthdatehours\"] = \"utcmonthdatehours\";\r\n    TimeUnit[\"Utcquarter\"] = \"utcquarter\";\r\n    TimeUnit[\"Utcquartermonth\"] = \"utcquartermonth\";\r\n    TimeUnit[\"Utcseconds\"] = \"utcseconds\";\r\n    TimeUnit[\"Utcsecondsmilliseconds\"] = \"utcsecondsmilliseconds\";\r\n    TimeUnit[\"Utcyear\"] = \"utcyear\";\r\n    TimeUnit[\"Utcyearmonth\"] = \"utcyearmonth\";\r\n    TimeUnit[\"Utcyearmonthdate\"] = \"utcyearmonthdate\";\r\n    TimeUnit[\"Utcyearmonthdatehours\"] = \"utcyearmonthdatehours\";\r\n    TimeUnit[\"Utcyearmonthdatehoursminutes\"] = \"utcyearmonthdatehoursminutes\";\r\n    TimeUnit[\"Utcyearmonthdatehoursminutesseconds\"] = \"utcyearmonthdatehoursminutesseconds\";\r\n    TimeUnit[\"Utcyearquarter\"] = \"utcyearquarter\";\r\n    TimeUnit[\"Utcyearquartermonth\"] = \"utcyearquartermonth\";\r\n    TimeUnit[\"Year\"] = \"year\";\r\n    TimeUnit[\"Yearmonth\"] = \"yearmonth\";\r\n    TimeUnit[\"Yearmonthdate\"] = \"yearmonthdate\";\r\n    TimeUnit[\"Yearmonthdatehours\"] = \"yearmonthdatehours\";\r\n    TimeUnit[\"Yearmonthdatehoursminutes\"] = \"yearmonthdatehoursminutes\";\r\n    TimeUnit[\"Yearmonthdatehoursminutesseconds\"] = \"yearmonthdatehoursminutesseconds\";\r\n    TimeUnit[\"Yearquarter\"] = \"yearquarter\";\r\n    TimeUnit[\"Yearquartermonth\"] = \"yearquartermonth\";\r\n})(TimeUnit || (TimeUnit = {}));\r\nexport var RepeatEnum;\r\n(function (RepeatEnum) {\r\n    RepeatEnum[\"Column\"] = \"column\";\r\n    RepeatEnum[\"Repeat\"] = \"repeat\";\r\n    RepeatEnum[\"Row\"] = \"row\";\r\n})(RepeatEnum || (RepeatEnum = {}));\r\n/**\r\n * The orientation of a non-stacked bar, tick, area, and line charts.\r\n * The value is either horizontal (default) or vertical.\r\n * - For bar, rule and tick, this determines whether the size of the bar and tick\r\n * should be applied to x or y dimension.\r\n * - For area, this property determines the orient property of the Vega output.\r\n * - For line and trail marks, this property determines the sort order of the points in the\r\n * line\r\n * if `config.sortLineBy` is not specified.\r\n * For stacked charts, this is always determined by the orientation of the stack;\r\n * therefore explicitly specified value will be ignored.\r\n *\r\n * The default direction (`\"horizontal\"` or `\"vertical\"`) for gradient legends.\r\n *\r\n * __Default value:__ `\"vertical\"`.\r\n *\r\n * The default direction (`\"horizontal\"` or `\"vertical\"`) for symbol legends.\r\n *\r\n * __Default value:__ `\"vertical\"`.\r\n *\r\n * The direction of the legend, one of `\"vertical\"` or `\"horizontal\"`.\r\n *\r\n * __Default value:__\r\n * - For top-/bottom-`orient`ed legends, `\"horizontal\"`\r\n * - For left-/right-`orient`ed legends, `\"vertical\"`\r\n * - For top/bottom-left/right-`orient`ed legends, `\"horizontal\"` for gradient legends and\r\n * `\"vertical\"` for symbol legends.\r\n *\r\n * Orientation of the box plot.  This is normally automatically determined based on types of\r\n * fields on x and y channels. However, an explicit `orient` be specified when the\r\n * orientation is ambiguous.\r\n *\r\n * __Default value:__ `\"vertical\"`.\r\n *\r\n * Orientation of the error bar.  This is normally automatically determined, but can be\r\n * specified when the orientation is ambiguous and cannot be automatically determined.\r\n *\r\n * Orientation of the error band. This is normally automatically determined, but can be\r\n * specified when the orientation is ambiguous and cannot be automatically determined.\r\n */\r\nexport var Orientation;\r\n(function (Orientation) {\r\n    Orientation[\"Horizontal\"] = \"horizontal\";\r\n    Orientation[\"Vertical\"] = \"vertical\";\r\n})(Orientation || (Orientation = {}));\r\n/**\r\n * The format type for labels (`\"number\"` or `\"time\"`).\r\n *\r\n * __Default value:__\r\n * - `\"time\"` for temporal fields and ordinal and nomimal fields with `timeUnit`.\r\n * - `\"number\"` for quantitative fields as well as ordinal and nomimal fields without\r\n * `timeUnit`.\r\n */\r\nexport var FormatType;\r\n(function (FormatType) {\r\n    FormatType[\"Number\"] = \"number\";\r\n    FormatType[\"Time\"] = \"time\";\r\n})(FormatType || (FormatType = {}));\r\n/**\r\n * The horizontal alignment of the text. One of `\"left\"`, `\"right\"`, `\"center\"`.\r\n *\r\n * Horizontal text alignment of axis tick labels, overriding the default setting for the\r\n * current axis orientation.\r\n *\r\n * Horizontal text alignment of axis titles.\r\n *\r\n * Horizontal text alignment of header labels.\r\n *\r\n * Horizontal text alignment (to the anchor) of header titles.\r\n *\r\n * The alignment of the legend label, can be left, center, or right.\r\n *\r\n * Horizontal text alignment for legend titles.\r\n *\r\n * __Default value:__ `\"left\"`.\r\n */\r\nexport var Align;\r\n(function (Align) {\r\n    Align[\"Center\"] = \"center\";\r\n    Align[\"Left\"] = \"left\";\r\n    Align[\"Right\"] = \"right\";\r\n})(Align || (Align = {}));\r\n/**\r\n * The vertical alignment of the text. One of `\"top\"`, `\"middle\"`, `\"bottom\"`.\r\n *\r\n * __Default value:__ `\"middle\"`\r\n *\r\n * Vertical text baseline of axis tick labels, overriding the default setting for the\r\n * current axis orientation. Can be `\"top\"`, `\"middle\"`, `\"bottom\"`, or `\"alphabetic\"`.\r\n *\r\n * Vertical text baseline for axis titles.\r\n *\r\n * Vertical text baseline for the header title. One of `\"top\"`, `\"bottom\"`, `\"middle\"`.\r\n *\r\n * __Default value:__ `\"middle\"`\r\n *\r\n * The position of the baseline of legend label, can be `\"top\"`, `\"middle\"`, `\"bottom\"`, or\r\n * `\"alphabetic\"`.\r\n *\r\n * __Default value:__ `\"middle\"`.\r\n *\r\n * Vertical text baseline for legend titles.\r\n *\r\n * __Default value:__ `\"top\"`.\r\n *\r\n * Vertical text baseline for title text. One of `\"top\"`, `\"middle\"`, `\"bottom\"`, or\r\n * `\"alphabetic\"`.\r\n */\r\nexport var TextBaseline;\r\n(function (TextBaseline) {\r\n    TextBaseline[\"Alphabetic\"] = \"alphabetic\";\r\n    TextBaseline[\"Bottom\"] = \"bottom\";\r\n    TextBaseline[\"Middle\"] = \"middle\";\r\n    TextBaseline[\"Top\"] = \"top\";\r\n})(TextBaseline || (TextBaseline = {}));\r\nexport var FontWeightEnum;\r\n(function (FontWeightEnum) {\r\n    FontWeightEnum[\"Bold\"] = \"bold\";\r\n    FontWeightEnum[\"Bolder\"] = \"bolder\";\r\n    FontWeightEnum[\"Lighter\"] = \"lighter\";\r\n    FontWeightEnum[\"Normal\"] = \"normal\";\r\n})(FontWeightEnum || (FontWeightEnum = {}));\r\nexport var LabelOverlapEnum;\r\n(function (LabelOverlapEnum) {\r\n    LabelOverlapEnum[\"Greedy\"] = \"greedy\";\r\n    LabelOverlapEnum[\"Parity\"] = \"parity\";\r\n})(LabelOverlapEnum || (LabelOverlapEnum = {}));\r\n/**\r\n * The orientation of the legend, which determines how the legend is positioned within the\r\n * scene. One of \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\",\r\n * \"none\".\r\n *\r\n * __Default value:__ `\"right\"`\r\n *\r\n * The orientation of the legend, which determines how the legend is positioned within the\r\n * scene. One of `\"left\"`, `\"right\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom-left\"`,\r\n * `\"bottom-right\"`, `\"none\"`.\r\n *\r\n * __Default value:__ `\"right\"`\r\n */\r\nexport var LegendOrient;\r\n(function (LegendOrient) {\r\n    LegendOrient[\"Bottom\"] = \"bottom\";\r\n    LegendOrient[\"BottomLeft\"] = \"bottom-left\";\r\n    LegendOrient[\"BottomRight\"] = \"bottom-right\";\r\n    LegendOrient[\"Left\"] = \"left\";\r\n    LegendOrient[\"None\"] = \"none\";\r\n    LegendOrient[\"Right\"] = \"right\";\r\n    LegendOrient[\"Top\"] = \"top\";\r\n    LegendOrient[\"TopLeft\"] = \"top-left\";\r\n    LegendOrient[\"TopRight\"] = \"top-right\";\r\n})(LegendOrient || (LegendOrient = {}));\r\nexport var TitleAnchor;\r\n(function (TitleAnchor) {\r\n    TitleAnchor[\"End\"] = \"end\";\r\n    TitleAnchor[\"Middle\"] = \"middle\";\r\n    TitleAnchor[\"Start\"] = \"start\";\r\n})(TitleAnchor || (TitleAnchor = {}));\r\n/**\r\n * The orientation of the header label. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`.\r\n *\r\n * The orientation of the header title. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`.\r\n *\r\n * Orientation of the legend title.\r\n *\r\n * The orientation of the axis. One of `\"top\"`, `\"bottom\"`, `\"left\"` or `\"right\"`. The\r\n * orientation can be used to further specialize the axis type (e.g., a y-axis oriented\r\n * towards the right edge of the chart).\r\n *\r\n * __Default value:__ `\"bottom\"` for x-axes and `\"left\"` for y-axes.\r\n */\r\nexport var Orient;\r\n(function (Orient) {\r\n    Orient[\"Bottom\"] = \"bottom\";\r\n    Orient[\"Left\"] = \"left\";\r\n    Orient[\"Right\"] = \"right\";\r\n    Orient[\"Top\"] = \"top\";\r\n})(Orient || (Orient = {}));\r\n/**\r\n * The type of the legend. Use `\"symbol\"` to create a discrete legend and `\"gradient\"` for a\r\n * continuous color gradient.\r\n *\r\n * __Default value:__ `\"gradient\"` for non-binned quantitative fields and temporal fields;\r\n * `\"symbol\"` otherwise.\r\n */\r\nexport var LegendType;\r\n(function (LegendType) {\r\n    LegendType[\"Gradient\"] = \"gradient\";\r\n    LegendType[\"Symbol\"] = \"symbol\";\r\n})(LegendType || (LegendType = {}));\r\nexport var Domain;\r\n(function (Domain) {\r\n    Domain[\"Unaggregated\"] = \"unaggregated\";\r\n})(Domain || (Domain = {}));\r\nexport var ScaleInterpolateParamsType;\r\n(function (ScaleInterpolateParamsType) {\r\n    ScaleInterpolateParamsType[\"Cubehelix\"] = \"cubehelix\";\r\n    ScaleInterpolateParamsType[\"CubehelixLong\"] = \"cubehelix-long\";\r\n    ScaleInterpolateParamsType[\"Rgb\"] = \"rgb\";\r\n})(ScaleInterpolateParamsType || (ScaleInterpolateParamsType = {}));\r\nexport var ScaleInterpolate;\r\n(function (ScaleInterpolate) {\r\n    ScaleInterpolate[\"Cubehelix\"] = \"cubehelix\";\r\n    ScaleInterpolate[\"CubehelixLong\"] = \"cubehelix-long\";\r\n    ScaleInterpolate[\"Hcl\"] = \"hcl\";\r\n    ScaleInterpolate[\"HclLong\"] = \"hcl-long\";\r\n    ScaleInterpolate[\"Hsl\"] = \"hsl\";\r\n    ScaleInterpolate[\"HslLong\"] = \"hsl-long\";\r\n    ScaleInterpolate[\"Lab\"] = \"lab\";\r\n    ScaleInterpolate[\"Rgb\"] = \"rgb\";\r\n})(ScaleInterpolate || (ScaleInterpolate = {}));\r\nexport var NiceTime;\r\n(function (NiceTime) {\r\n    NiceTime[\"Day\"] = \"day\";\r\n    NiceTime[\"Hour\"] = \"hour\";\r\n    NiceTime[\"Minute\"] = \"minute\";\r\n    NiceTime[\"Month\"] = \"month\";\r\n    NiceTime[\"Second\"] = \"second\";\r\n    NiceTime[\"Week\"] = \"week\";\r\n    NiceTime[\"Year\"] = \"year\";\r\n})(NiceTime || (NiceTime = {}));\r\n/**\r\n * The type of scale.  Vega-Lite supports the following categories of scale types:\r\n *\r\n * 1) [**Continuous Scales**](https://vega.github.io/vega-lite/docs/scale.html#continuous)\r\n * -- mapping continuous domains to continuous output ranges\r\n * ([`\"linear\"`](https://vega.github.io/vega-lite/docs/scale.html#linear),\r\n * [`\"pow\"`](https://vega.github.io/vega-lite/docs/scale.html#pow),\r\n * [`\"sqrt\"`](https://vega.github.io/vega-lite/docs/scale.html#sqrt),\r\n * [`\"symlog\"`](https://vega.github.io/vega-lite/docs/scale.html#symlog),\r\n * [`\"log\"`](https://vega.github.io/vega-lite/docs/scale.html#log),\r\n * [`\"time\"`](https://vega.github.io/vega-lite/docs/scale.html#time),\r\n * [`\"utc\"`](https://vega.github.io/vega-lite/docs/scale.html#utc).\r\n *\r\n * 2) [**Discrete Scales**](https://vega.github.io/vega-lite/docs/scale.html#discrete) --\r\n * mapping discrete domains to discrete\r\n * ([`\"ordinal\"`](https://vega.github.io/vega-lite/docs/scale.html#ordinal)) or continuous\r\n * ([`\"band\"`](https://vega.github.io/vega-lite/docs/scale.html#band) and\r\n * [`\"point\"`](https://vega.github.io/vega-lite/docs/scale.html#point)) output ranges.\r\n *\r\n * 3) [**Discretizing\r\n * Scales**](https://vega.github.io/vega-lite/docs/scale.html#discretizing) -- mapping\r\n * continuous domains to discrete output ranges\r\n * [`\"bin-ordinal\"`](https://vega.github.io/vega-lite/docs/scale.html#bin-ordinal),\r\n * [`\"quantile\"`](https://vega.github.io/vega-lite/docs/scale.html#quantile),\r\n * [`\"quantize\"`](https://vega.github.io/vega-lite/docs/scale.html#quantize) and\r\n * [`\"threshold\"`](https://vega.github.io/vega-lite/docs/scale.html#threshold).\r\n *\r\n * __Default value:__ please see the [scale type\r\n * table](https://vega.github.io/vega-lite/docs/scale.html#type).\r\n */\r\nexport var ScaleType;\r\n(function (ScaleType) {\r\n    ScaleType[\"Band\"] = \"band\";\r\n    ScaleType[\"BinOrdinal\"] = \"bin-ordinal\";\r\n    ScaleType[\"Linear\"] = \"linear\";\r\n    ScaleType[\"Log\"] = \"log\";\r\n    ScaleType[\"Ordinal\"] = \"ordinal\";\r\n    ScaleType[\"Point\"] = \"point\";\r\n    ScaleType[\"Pow\"] = \"pow\";\r\n    ScaleType[\"Quantile\"] = \"quantile\";\r\n    ScaleType[\"Quantize\"] = \"quantize\";\r\n    ScaleType[\"Sqrt\"] = \"sqrt\";\r\n    ScaleType[\"Symlog\"] = \"symlog\";\r\n    ScaleType[\"Threshold\"] = \"threshold\";\r\n    ScaleType[\"Time\"] = \"time\";\r\n    ScaleType[\"Utc\"] = \"utc\";\r\n})(ScaleType || (ScaleType = {}));\r\n/**\r\n * The [encoding channel](https://vega.github.io/vega-lite/docs/encoding.html#channels) to\r\n * sort by (e.g., `\"x\"`, `\"y\"`)\r\n */\r\nexport var SingleDefUnitChannel;\r\n(function (SingleDefUnitChannel) {\r\n    SingleDefUnitChannel[\"Color\"] = \"color\";\r\n    SingleDefUnitChannel[\"Fill\"] = \"fill\";\r\n    SingleDefUnitChannel[\"FillOpacity\"] = \"fillOpacity\";\r\n    SingleDefUnitChannel[\"Href\"] = \"href\";\r\n    SingleDefUnitChannel[\"Key\"] = \"key\";\r\n    SingleDefUnitChannel[\"Latitude\"] = \"latitude\";\r\n    SingleDefUnitChannel[\"Latitude2\"] = \"latitude2\";\r\n    SingleDefUnitChannel[\"Longitude\"] = \"longitude\";\r\n    SingleDefUnitChannel[\"Longitude2\"] = \"longitude2\";\r\n    SingleDefUnitChannel[\"Opacity\"] = \"opacity\";\r\n    SingleDefUnitChannel[\"Shape\"] = \"shape\";\r\n    SingleDefUnitChannel[\"Size\"] = \"size\";\r\n    SingleDefUnitChannel[\"Stroke\"] = \"stroke\";\r\n    SingleDefUnitChannel[\"StrokeOpacity\"] = \"strokeOpacity\";\r\n    SingleDefUnitChannel[\"StrokeWidth\"] = \"strokeWidth\";\r\n    SingleDefUnitChannel[\"Text\"] = \"text\";\r\n    SingleDefUnitChannel[\"Tooltip\"] = \"tooltip\";\r\n    SingleDefUnitChannel[\"X\"] = \"x\";\r\n    SingleDefUnitChannel[\"X2\"] = \"x2\";\r\n    SingleDefUnitChannel[\"Y\"] = \"y\";\r\n    SingleDefUnitChannel[\"Y2\"] = \"y2\";\r\n})(SingleDefUnitChannel || (SingleDefUnitChannel = {}));\r\n/**\r\n * The sort order. One of `\"ascending\"` (default) or `\"descending\"`.\r\n */\r\nexport var SortOrder;\r\n(function (SortOrder) {\r\n    SortOrder[\"Ascending\"] = \"ascending\";\r\n    SortOrder[\"Descending\"] = \"descending\";\r\n})(SortOrder || (SortOrder = {}));\r\n/**\r\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\r\n * `\"nominal\"`).\r\n * It can also be a `\"geojson\"` type for encoding\r\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\r\n *\r\n *\r\n * __Note:__\r\n *\r\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\r\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\r\n * `1552199579097`).\r\n * - Data `type` describes the semantics of the data rather than the primitive data types\r\n * (`number`, `string`, etc.). The same primitive data type can have different types of\r\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\r\n * data.\r\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\r\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\r\n * (for using an ordinal bin\r\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\r\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\r\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\r\n * the `type` property refers to the post-aggregation data type. For example, we can\r\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\r\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\r\n * output is `\"quantitative\"`.\r\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\r\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\r\n */\r\nexport var StandardType;\r\n(function (StandardType) {\r\n    StandardType[\"Nominal\"] = \"nominal\";\r\n    StandardType[\"Ordinal\"] = \"ordinal\";\r\n    StandardType[\"Quantitative\"] = \"quantitative\";\r\n    StandardType[\"Temporal\"] = \"temporal\";\r\n})(StandardType || (StandardType = {}));\r\nexport var BinEnum;\r\n(function (BinEnum) {\r\n    BinEnum[\"Binned\"] = \"binned\";\r\n})(BinEnum || (BinEnum = {}));\r\n/**\r\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\r\n * `\"nominal\"`).\r\n * It can also be a `\"geojson\"` type for encoding\r\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\r\n *\r\n *\r\n * __Note:__\r\n *\r\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\r\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\r\n * `1552199579097`).\r\n * - Data `type` describes the semantics of the data rather than the primitive data types\r\n * (`number`, `string`, etc.). The same primitive data type can have different types of\r\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\r\n * data.\r\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\r\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\r\n * (for using an ordinal bin\r\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\r\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\r\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\r\n * the `type` property refers to the post-aggregation data type. For example, we can\r\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\r\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\r\n * output is `\"quantitative\"`.\r\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\r\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\r\n */\r\nexport var LatitudeType;\r\n(function (LatitudeType) {\r\n    LatitudeType[\"Quantitative\"] = \"quantitative\";\r\n})(LatitudeType || (LatitudeType = {}));\r\n/**\r\n * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or\r\n * `\"nominal\"`).\r\n * It can also be a `\"geojson\"` type for encoding\r\n * ['geoshape'](https://vega.github.io/vega-lite/docs/geoshape.html).\r\n *\r\n *\r\n * __Note:__\r\n *\r\n * - Data values for a temporal field can be either a date-time string (e.g., `\"2015-03-07\r\n * 12:32:17\"`, `\"17:01\"`, `\"2015-03-16\"`. `\"2015\"`) or a timestamp number (e.g.,\r\n * `1552199579097`).\r\n * - Data `type` describes the semantics of the data rather than the primitive data types\r\n * (`number`, `string`, etc.). The same primitive data type can have different types of\r\n * measurement. For example, numeric data can represent quantitative, ordinal, or nominal\r\n * data.\r\n * - When using with [`bin`](https://vega.github.io/vega-lite/docs/bin.html), the `type`\r\n * property can be either `\"quantitative\"` (for using a linear bin scale) or [`\"ordinal\"`\r\n * (for using an ordinal bin\r\n * scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`timeUnit`](https://vega.github.io/vega-lite/docs/timeunit.html), the\r\n * `type` property can be either `\"temporal\"` (for using a temporal scale) or [`\"ordinal\"`\r\n * (for using an ordinal scale)](https://vega.github.io/vega-lite/docs/type.html#cast-bin).\r\n * - When using with [`aggregate`](https://vega.github.io/vega-lite/docs/aggregate.html),\r\n * the `type` property refers to the post-aggregation data type. For example, we can\r\n * calculate count `distinct` of a categorical field `\"cat\"` using `{\"aggregate\":\r\n * \"distinct\", \"field\": \"cat\", \"type\": \"quantitative\"}`. The `\"type\"` of the aggregate\r\n * output is `\"quantitative\"`.\r\n * - Secondary channels (e.g., `x2`, `y2`, `xError`, `yError`) do not have `type` as they\r\n * have exactly the same type as their primary channels (e.g., `x`, `y`).\r\n */\r\nexport var TypeForShape;\r\n(function (TypeForShape) {\r\n    TypeForShape[\"Geojson\"] = \"geojson\";\r\n    TypeForShape[\"Nominal\"] = \"nominal\";\r\n    TypeForShape[\"Ordinal\"] = \"ordinal\";\r\n})(TypeForShape || (TypeForShape = {}));\r\n/**\r\n * The imputation method to use for the field value of imputed data objects.\r\n * One of `value`, `mean`, `median`, `max` or `min`.\r\n *\r\n * __Default value:__  `\"value\"`\r\n */\r\nexport var ImputeMethod;\r\n(function (ImputeMethod) {\r\n    ImputeMethod[\"Max\"] = \"max\";\r\n    ImputeMethod[\"Mean\"] = \"mean\";\r\n    ImputeMethod[\"Median\"] = \"median\";\r\n    ImputeMethod[\"Min\"] = \"min\";\r\n    ImputeMethod[\"Value\"] = \"value\";\r\n})(ImputeMethod || (ImputeMethod = {}));\r\n/**\r\n * Default stack offset for stackable mark.\r\n *\r\n * Mode for stacking marks.\r\n * __Default value:__ `\"zero\"`\r\n */\r\nexport var StackOffset;\r\n(function (StackOffset) {\r\n    StackOffset[\"Center\"] = \"center\";\r\n    StackOffset[\"Normalize\"] = \"normalize\";\r\n    StackOffset[\"Zero\"] = \"zero\";\r\n})(StackOffset || (StackOffset = {}));\r\nexport var PurpleValue;\r\n(function (PurpleValue) {\r\n    PurpleValue[\"Width\"] = \"width\";\r\n})(PurpleValue || (PurpleValue = {}));\r\nexport var FluffyValue;\r\n(function (FluffyValue) {\r\n    FluffyValue[\"Height\"] = \"height\";\r\n})(FluffyValue || (FluffyValue = {}));\r\n/**\r\n * The mouse cursor used over the mark. Any valid [CSS cursor\r\n * type](https://developer.mozilla.org/en-US/docs/Web/CSS/cursor#Values) can be used.\r\n */\r\nexport var Cursor;\r\n(function (Cursor) {\r\n    Cursor[\"Alias\"] = \"alias\";\r\n    Cursor[\"AllScroll\"] = \"all-scroll\";\r\n    Cursor[\"Auto\"] = \"auto\";\r\n    Cursor[\"Cell\"] = \"cell\";\r\n    Cursor[\"ColResize\"] = \"col-resize\";\r\n    Cursor[\"ContextMenu\"] = \"context-menu\";\r\n    Cursor[\"Copy\"] = \"copy\";\r\n    Cursor[\"Crosshair\"] = \"crosshair\";\r\n    Cursor[\"Default\"] = \"default\";\r\n    Cursor[\"EResize\"] = \"e-resize\";\r\n    Cursor[\"EwResize\"] = \"ew-resize\";\r\n    Cursor[\"Grab\"] = \"grab\";\r\n    Cursor[\"Grabbing\"] = \"grabbing\";\r\n    Cursor[\"Help\"] = \"help\";\r\n    Cursor[\"Move\"] = \"move\";\r\n    Cursor[\"NResize\"] = \"n-resize\";\r\n    Cursor[\"NeResize\"] = \"ne-resize\";\r\n    Cursor[\"NeswResize\"] = \"nesw-resize\";\r\n    Cursor[\"NoDrop\"] = \"no-drop\";\r\n    Cursor[\"None\"] = \"none\";\r\n    Cursor[\"NotAllowed\"] = \"not-allowed\";\r\n    Cursor[\"NsResize\"] = \"ns-resize\";\r\n    Cursor[\"NwResize\"] = \"nw-resize\";\r\n    Cursor[\"NwseResize\"] = \"nwse-resize\";\r\n    Cursor[\"Pointer\"] = \"pointer\";\r\n    Cursor[\"Progress\"] = \"progress\";\r\n    Cursor[\"RowResize\"] = \"row-resize\";\r\n    Cursor[\"SResize\"] = \"s-resize\";\r\n    Cursor[\"SeResize\"] = \"se-resize\";\r\n    Cursor[\"SwResize\"] = \"sw-resize\";\r\n    Cursor[\"Text\"] = \"text\";\r\n    Cursor[\"VerticalText\"] = \"vertical-text\";\r\n    Cursor[\"WResize\"] = \"w-resize\";\r\n    Cursor[\"Wait\"] = \"wait\";\r\n    Cursor[\"ZoomIn\"] = \"zoom-in\";\r\n    Cursor[\"ZoomOut\"] = \"zoom-out\";\r\n})(Cursor || (Cursor = {}));\r\n/**\r\n * The direction of the text. One of `\"ltr\"` (left-to-right) or `\"rtl\"` (right-to-left).\r\n * This property determines on which side is truncated in response to the limit parameter.\r\n *\r\n * __Default value:__ `\"ltr\"`\r\n */\r\nexport var Dir;\r\n(function (Dir) {\r\n    Dir[\"Ltr\"] = \"ltr\";\r\n    Dir[\"Rtl\"] = \"rtl\";\r\n})(Dir || (Dir = {}));\r\n/**\r\n * The line interpolation method to use for line and area marks. One of the following:\r\n * - `\"linear\"`: piecewise linear segments, as in a polyline.\r\n * - `\"linear-closed\"`: close the linear segments to form a polygon.\r\n * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\r\n * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step\r\n * function.\r\n * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step\r\n * function.\r\n * - `\"basis\"`: a B-spline, with control point duplication on the ends.\r\n * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\r\n * - `\"basis-closed\"`: a closed B-spline, as in a loop.\r\n * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\r\n * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but\r\n * will intersect other control points.\r\n * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\r\n * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the\r\n * spline.\r\n * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\r\n *\r\n * The line interpolation method for the error band. One of the following:\r\n * - `\"linear\"`: piecewise linear segments, as in a polyline.\r\n * - `\"linear-closed\"`: close the linear segments to form a polygon.\r\n * - `\"step\"`: a piecewise constant function (a step function) consisting of alternating\r\n * horizontal and vertical lines. The y-value changes at the midpoint of each pair of\r\n * adjacent x-values.\r\n * - `\"step-before\"`: a piecewise constant function (a step function) consisting of\r\n * alternating horizontal and vertical lines. The y-value changes before the x-value.\r\n * - `\"step-after\"`: a piecewise constant function (a step function) consisting of\r\n * alternating horizontal and vertical lines. The y-value changes after the x-value.\r\n * - `\"basis\"`: a B-spline, with control point duplication on the ends.\r\n * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\r\n * - `\"basis-closed\"`: a closed B-spline, as in a loop.\r\n * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\r\n * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but\r\n * will intersect other control points.\r\n * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\r\n * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the\r\n * spline.\r\n * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\r\n */\r\nexport var Interpolate;\r\n(function (Interpolate) {\r\n    Interpolate[\"Basis\"] = \"basis\";\r\n    Interpolate[\"BasisClosed\"] = \"basis-closed\";\r\n    Interpolate[\"BasisOpen\"] = \"basis-open\";\r\n    Interpolate[\"Bundle\"] = \"bundle\";\r\n    Interpolate[\"Cardinal\"] = \"cardinal\";\r\n    Interpolate[\"CardinalClosed\"] = \"cardinal-closed\";\r\n    Interpolate[\"CardinalOpen\"] = \"cardinal-open\";\r\n    Interpolate[\"Linear\"] = \"linear\";\r\n    Interpolate[\"LinearClosed\"] = \"linear-closed\";\r\n    Interpolate[\"Monotone\"] = \"monotone\";\r\n    Interpolate[\"Step\"] = \"step\";\r\n    Interpolate[\"StepAfter\"] = \"step-after\";\r\n    Interpolate[\"StepBefore\"] = \"step-before\";\r\n})(Interpolate || (Interpolate = {}));\r\n/**\r\n * The stroke cap for line ending style. One of `\"butt\"`, `\"round\"`, or `\"square\"`.\r\n *\r\n * __Default value:__ `\"square\"`\r\n */\r\nexport var StrokeCap;\r\n(function (StrokeCap) {\r\n    StrokeCap[\"Butt\"] = \"butt\";\r\n    StrokeCap[\"Round\"] = \"round\";\r\n    StrokeCap[\"Square\"] = \"square\";\r\n})(StrokeCap || (StrokeCap = {}));\r\n/**\r\n * The stroke line join method. One of `\"miter\"`, `\"round\"` or `\"bevel\"`.\r\n *\r\n * __Default value:__ `\"miter\"`\r\n */\r\nexport var StrokeJoin;\r\n(function (StrokeJoin) {\r\n    StrokeJoin[\"Bevel\"] = \"bevel\";\r\n    StrokeJoin[\"Miter\"] = \"miter\";\r\n    StrokeJoin[\"Round\"] = \"round\";\r\n})(StrokeJoin || (StrokeJoin = {}));\r\nexport var Content;\r\n(function (Content) {\r\n    Content[\"Data\"] = \"data\";\r\n    Content[\"Encoding\"] = \"encoding\";\r\n})(Content || (Content = {}));\r\n/**\r\n * The extent of the band. Available options include:\r\n * - `\"ci\"`: Extend the band to the confidence interval of the mean.\r\n * - `\"stderr\"`: The size of band are set to the value of standard error, extending from the\r\n * mean.\r\n * - `\"stdev\"`: The size of band are set to the value of standard deviation, extending from\r\n * the mean.\r\n * - `\"iqr\"`: Extend the band to the q1 and q3.\r\n *\r\n * __Default value:__ `\"stderr\"`.\r\n *\r\n * The extent of the rule. Available options include:\r\n * - `\"ci\"`: Extend the rule to the confidence interval of the mean.\r\n * - `\"stderr\"`: The size of rule are set to the value of standard error, extending from the\r\n * mean.\r\n * - `\"stdev\"`: The size of rule are set to the value of standard deviation, extending from\r\n * the mean.\r\n * - `\"iqr\"`: Extend the rule to the q1 and q3.\r\n *\r\n * __Default value:__ `\"stderr\"`.\r\n */\r\nexport var ExtentExtent;\r\n(function (ExtentExtent) {\r\n    ExtentExtent[\"Ci\"] = \"ci\";\r\n    ExtentExtent[\"Iqr\"] = \"iqr\";\r\n    ExtentExtent[\"MinMax\"] = \"min-max\";\r\n    ExtentExtent[\"Stderr\"] = \"stderr\";\r\n    ExtentExtent[\"Stdev\"] = \"stdev\";\r\n})(ExtentExtent || (ExtentExtent = {}));\r\nexport var PointEnum;\r\n(function (PointEnum) {\r\n    PointEnum[\"Transparent\"] = \"transparent\";\r\n})(PointEnum || (PointEnum = {}));\r\n/**\r\n * All types of primitive marks.\r\n *\r\n * The mark type. This could a primitive mark type\r\n * (one of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\r\n * `\"area\"`, `\"point\"`, `\"geoshape\"`, `\"rule\"`, and `\"text\"`)\r\n * or a composite mark type (`\"boxplot\"`, `\"errorband\"`, `\"errorbar\"`).\r\n */\r\nexport var Mark;\r\n(function (Mark) {\r\n    Mark[\"Area\"] = \"area\";\r\n    Mark[\"Bar\"] = \"bar\";\r\n    Mark[\"Boxplot\"] = \"boxplot\";\r\n    Mark[\"Circle\"] = \"circle\";\r\n    Mark[\"Errorband\"] = \"errorband\";\r\n    Mark[\"Errorbar\"] = \"errorbar\";\r\n    Mark[\"Geoshape\"] = \"geoshape\";\r\n    Mark[\"Line\"] = \"line\";\r\n    Mark[\"Point\"] = \"point\";\r\n    Mark[\"Rect\"] = \"rect\";\r\n    Mark[\"Rule\"] = \"rule\";\r\n    Mark[\"Square\"] = \"square\";\r\n    Mark[\"Text\"] = \"text\";\r\n    Mark[\"Tick\"] = \"tick\";\r\n    Mark[\"Trail\"] = \"trail\";\r\n})(Mark || (Mark = {}));\r\n/**\r\n * The cartographic projection to use. This value is case-insensitive, for example\r\n * `\"albers\"` and `\"Albers\"` indicate the same projection type. You can find all valid\r\n * projection types [in the\r\n * documentation](https://vega.github.io/vega-lite/docs/projection.html#projection-types).\r\n *\r\n * __Default value:__ `mercator`\r\n */\r\nexport var ProjectionType;\r\n(function (ProjectionType) {\r\n    ProjectionType[\"Albers\"] = \"albers\";\r\n    ProjectionType[\"AlbersUsa\"] = \"albersUsa\";\r\n    ProjectionType[\"AzimuthalEqualArea\"] = \"azimuthalEqualArea\";\r\n    ProjectionType[\"AzimuthalEquidistant\"] = \"azimuthalEquidistant\";\r\n    ProjectionType[\"ConicConformal\"] = \"conicConformal\";\r\n    ProjectionType[\"ConicEqualArea\"] = \"conicEqualArea\";\r\n    ProjectionType[\"ConicEquidistant\"] = \"conicEquidistant\";\r\n    ProjectionType[\"Equirectangular\"] = \"equirectangular\";\r\n    ProjectionType[\"Gnomonic\"] = \"gnomonic\";\r\n    ProjectionType[\"Identity\"] = \"identity\";\r\n    ProjectionType[\"Mercator\"] = \"mercator\";\r\n    ProjectionType[\"Orthographic\"] = \"orthographic\";\r\n    ProjectionType[\"Stereographic\"] = \"stereographic\";\r\n    ProjectionType[\"TransverseMercator\"] = \"transverseMercator\";\r\n})(ProjectionType || (ProjectionType = {}));\r\nexport var ResolveMode;\r\n(function (ResolveMode) {\r\n    ResolveMode[\"Independent\"] = \"independent\";\r\n    ResolveMode[\"Shared\"] = \"shared\";\r\n})(ResolveMode || (ResolveMode = {}));\r\n/**\r\n * Establishes a two-way binding between the interval selection and the scales\r\n * used within the same view. This allows a user to interactively pan and\r\n * zoom the view.\r\n */\r\nexport var BindEnum;\r\n(function (BindEnum) {\r\n    BindEnum[\"Scales\"] = \"scales\";\r\n})(BindEnum || (BindEnum = {}));\r\n/**\r\n * By default, `all` data values are considered to lie within an empty selection.\r\n * When set to `none`, empty selections contain no data values.\r\n */\r\nexport var Empty;\r\n(function (Empty) {\r\n    Empty[\"All\"] = \"all\";\r\n    Empty[\"None\"] = \"none\";\r\n})(Empty || (Empty = {}));\r\n/**\r\n * With layered and multi-view displays, a strategy that determines how\r\n * selections' data queries are resolved when applied in a filter transform,\r\n * conditional encoding rule, or scale domain.\r\n */\r\nexport var SelectionResolution;\r\n(function (SelectionResolution) {\r\n    SelectionResolution[\"Global\"] = \"global\";\r\n    SelectionResolution[\"Intersect\"] = \"intersect\";\r\n    SelectionResolution[\"Union\"] = \"union\";\r\n})(SelectionResolution || (SelectionResolution = {}));\r\nexport var SelectionDefType;\r\n(function (SelectionDefType) {\r\n    SelectionDefType[\"Interval\"] = \"interval\";\r\n    SelectionDefType[\"Multi\"] = \"multi\";\r\n    SelectionDefType[\"Single\"] = \"single\";\r\n})(SelectionDefType || (SelectionDefType = {}));\r\n/**\r\n * The reference frame for the anchor position, one of `\"bounds\"` (to anchor relative to the\r\n * full bounding box) or `\"group\"` (to anchor relative to the group width or height).\r\n */\r\nexport var TitleFrame;\r\n(function (TitleFrame) {\r\n    TitleFrame[\"Bounds\"] = \"bounds\";\r\n    TitleFrame[\"Group\"] = \"group\";\r\n})(TitleFrame || (TitleFrame = {}));\r\n/**\r\n * Default title orientation (`\"top\"`, `\"bottom\"`, `\"left\"`, or `\"right\"`)\r\n */\r\nexport var TitleOrient;\r\n(function (TitleOrient) {\r\n    TitleOrient[\"Bottom\"] = \"bottom\";\r\n    TitleOrient[\"Left\"] = \"left\";\r\n    TitleOrient[\"None\"] = \"none\";\r\n    TitleOrient[\"Right\"] = \"right\";\r\n    TitleOrient[\"Top\"] = \"top\";\r\n})(TitleOrient || (TitleOrient = {}));\r\n/**\r\n * The window or aggregation operation to apply within a window (e.g.,`rank`, `lead`, `sum`,\r\n * `average` or `count`). See the list of all supported operations\r\n * [here](https://vega.github.io/vega-lite/docs/window.html#ops).\r\n *\r\n * An [aggregate operation](https://vega.github.io/vega-lite/docs/aggregate.html#ops) to\r\n * perform on the field prior to sorting (e.g., `\"count\"`, `\"mean\"` and `\"median\"`).\r\n * An aggregation is required when there are multiple values of the sort field for each\r\n * encoded data field.\r\n * The input data objects will be aggregated, grouped by the encoded data field.\r\n *\r\n * For a full list of operations, please see the documentation for\r\n * [aggregate](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\r\n *\r\n * __Default value:__ `\"sum\"` for stacked plots. Otherwise, `\"mean\"`.\r\n *\r\n * The aggregation operation to apply to the fields (e.g., sum, average or count).\r\n * See the [full list of supported aggregation\r\n * operations](https://vega.github.io/vega-lite/docs/aggregate.html#ops)\r\n * for more information.\r\n *\r\n * The aggregation operation to apply (e.g., sum, average or count). See the list of all\r\n * supported operations [here](https://vega.github.io/vega-lite/docs/aggregate.html#ops).\r\n */\r\nexport var Op;\r\n(function (Op) {\r\n    Op[\"Argmax\"] = \"argmax\";\r\n    Op[\"Argmin\"] = \"argmin\";\r\n    Op[\"Average\"] = \"average\";\r\n    Op[\"Ci0\"] = \"ci0\";\r\n    Op[\"Ci1\"] = \"ci1\";\r\n    Op[\"Count\"] = \"count\";\r\n    Op[\"CumeDist\"] = \"cume_dist\";\r\n    Op[\"DenseRank\"] = \"dense_rank\";\r\n    Op[\"Distinct\"] = \"distinct\";\r\n    Op[\"FirstValue\"] = \"first_value\";\r\n    Op[\"Lag\"] = \"lag\";\r\n    Op[\"LastValue\"] = \"last_value\";\r\n    Op[\"Lead\"] = \"lead\";\r\n    Op[\"Max\"] = \"max\";\r\n    Op[\"Mean\"] = \"mean\";\r\n    Op[\"Median\"] = \"median\";\r\n    Op[\"Min\"] = \"min\";\r\n    Op[\"Missing\"] = \"missing\";\r\n    Op[\"NthValue\"] = \"nth_value\";\r\n    Op[\"Ntile\"] = \"ntile\";\r\n    Op[\"PercentRank\"] = \"percent_rank\";\r\n    Op[\"Q1\"] = \"q1\";\r\n    Op[\"Q3\"] = \"q3\";\r\n    Op[\"Rank\"] = \"rank\";\r\n    Op[\"RowNumber\"] = \"row_number\";\r\n    Op[\"Stderr\"] = \"stderr\";\r\n    Op[\"Stdev\"] = \"stdev\";\r\n    Op[\"Stdevp\"] = \"stdevp\";\r\n    Op[\"Sum\"] = \"sum\";\r\n    Op[\"Valid\"] = \"valid\";\r\n    Op[\"Values\"] = \"values\";\r\n    Op[\"Variance\"] = \"variance\";\r\n    Op[\"Variancep\"] = \"variancep\";\r\n})(Op || (Op = {}));\r\nexport var ExtentEnum;\r\n(function (ExtentEnum) {\r\n    ExtentEnum[\"MinMax\"] = \"min-max\";\r\n})(ExtentEnum || (ExtentEnum = {}));\r\n/**\r\n * The extent of the band. Available options include:\r\n * - `\"ci\"`: Extend the band to the confidence interval of the mean.\r\n * - `\"stderr\"`: The size of band are set to the value of standard error, extending from the\r\n * mean.\r\n * - `\"stdev\"`: The size of band are set to the value of standard deviation, extending from\r\n * the mean.\r\n * - `\"iqr\"`: Extend the band to the q1 and q3.\r\n *\r\n * __Default value:__ `\"stderr\"`.\r\n *\r\n * The extent of the rule. Available options include:\r\n * - `\"ci\"`: Extend the rule to the confidence interval of the mean.\r\n * - `\"stderr\"`: The size of rule are set to the value of standard error, extending from the\r\n * mean.\r\n * - `\"stdev\"`: The size of rule are set to the value of standard deviation, extending from\r\n * the mean.\r\n * - `\"iqr\"`: Extend the rule to the q1 and q3.\r\n *\r\n * __Default value:__ `\"stderr\"`.\r\n */\r\nexport var ErrorbandExtent;\r\n(function (ErrorbandExtent) {\r\n    ErrorbandExtent[\"Ci\"] = \"ci\";\r\n    ErrorbandExtent[\"Iqr\"] = \"iqr\";\r\n    ErrorbandExtent[\"Stderr\"] = \"stderr\";\r\n    ErrorbandExtent[\"Stdev\"] = \"stdev\";\r\n})(ErrorbandExtent || (ErrorbandExtent = {}));\r\n/**\r\n * Defines how Vega-Lite generates title for fields.  There are three possible styles:\r\n * - `\"verbal\"` (Default) - displays function in a verbal style (e.g., \"Sum of field\",\r\n * \"Year-month of date\", \"field (binned)\").\r\n * - `\"function\"` - displays function using parentheses and capitalized texts (e.g.,\r\n * \"SUM(field)\", \"YEARMONTH(date)\", \"BIN(field)\").\r\n * - `\"plain\"` - displays only the field name without functions (e.g., \"field\", \"date\",\r\n * \"field\").\r\n */\r\nexport var FieldTitle;\r\n(function (FieldTitle) {\r\n    FieldTitle[\"Functional\"] = \"functional\";\r\n    FieldTitle[\"Plain\"] = \"plain\";\r\n    FieldTitle[\"Verbal\"] = \"verbal\";\r\n})(FieldTitle || (FieldTitle = {}));\r\nexport var InvalidValues;\r\n(function (InvalidValues) {\r\n    InvalidValues[\"Filter\"] = \"filter\";\r\n})(InvalidValues || (InvalidValues = {}));\r\n","export function TranslateEncoding(layer, labels, layerData, scales) {\r\n    var layerEncoding = {\r\n        x: TranslateXClass(layer, labels, layerData, scales),\r\n        y: TranslateYClass(layer, labels, layerData, scales),\r\n        // color: TranslateColor(layer, labels, layerData),\r\n        size: TranslateSize(layer, labels, layerData),\r\n        shape: TranslateShape(layer, labels, layerData),\r\n        stroke: TranslateStroke(layer, labels, layerData),\r\n        strokeWidth: TranslateStrokeWidth(layer, labels, layerData),\r\n        opacity: TranslateOpacity(layer, labels, layerData),\r\n        fill: TranslateFill(layer, labels, layerData)\r\n    };\r\n    return layerEncoding;\r\n}\r\nfunction TranslateXClass(layer, labels, layerData, scales) {\r\n    var field = layer['mapping']['x']['field'];\r\n    var type = layerData['metadata'][field]['type'];\r\n    var scale;\r\n    var title = labels['x'];\r\n    for (var _i = 0, scales_1 = scales; _i < scales_1.length; _i++) {\r\n        var ggScale = scales_1[_i];\r\n        if (ggScale['aesthetics'][0] == 'x') {\r\n            scale = TranslateScale(ggScale['transform']);\r\n            if (ggScale['name']) {\r\n                title = ggScale['name'];\r\n            }\r\n        }\r\n    }\r\n    field = field.replace('.', '\\\\.');\r\n    var xClass = {\r\n        field: field,\r\n        type: type,\r\n        title: title,\r\n        scale: scale\r\n    };\r\n    return xClass;\r\n}\r\nfunction TranslateYClass(layer, labels, layerData, scales) {\r\n    var field = layer['mapping']['y']['field'];\r\n    var type = layerData['metadata'][field]['type'];\r\n    var scale;\r\n    var title = labels['y'];\r\n    for (var _i = 0, scales_2 = scales; _i < scales_2.length; _i++) {\r\n        var ggScale = scales_2[_i];\r\n        if (ggScale['aesthetics'][0] == 'y') {\r\n            scale = TranslateScale(ggScale['transform']);\r\n            if (ggScale['name']) {\r\n                title = ggScale['name'];\r\n            }\r\n        }\r\n    }\r\n    field = field.replace('.', '\\\\.');\r\n    var yClass = {\r\n        field: field,\r\n        type: type,\r\n        title: title,\r\n        scale: scale\r\n    };\r\n    return yClass;\r\n}\r\n/**\r\n * This function used tp translate `color`.\r\n * For now, we believe we can use `fill` and `stroke` substitute `color`. So we just comment this function\r\n * @param layer\r\n * @param ggSpec\r\n */\r\n// function TranslateColor(layer: any, labels: any, layerData: any): vlspec.ValueDefWithConditionMarkPropFieldDefStringNull | undefined {\r\n//   let color: vlspec.ValueDefWithConditionMarkPropFieldDefStringNull | undefined;\r\n//   if (layer['aes_params']['colour']) {\r\n//     color = layer['aes_params']['colour'];\r\n//   }\r\n//   if (layer['mapping']['colour']) {\r\n//     if (!layer['mapping']['colour']['field']) {\r\n//       return color;\r\n//     }\r\n//     let field: string = layer['mapping']['colour']['field'];\r\n//     const type: vlspec.StandardType = layerData['metadata'][field]['type'];\r\n//     field = field.replace('.', '\\\\.');\r\n//     color = {\r\n//       field: field,\r\n//       type: type,\r\n//       title: labels['colour']\r\n//     };\r\n//   }\r\n//   return color;\r\n// }\r\n/**\r\n * TODO:// default type is ordinal bin\r\n * translate encoding.size\r\n * @param layer in ggSpec['layers']\r\n * @param ggSpec is the ggSpec\r\n */\r\nfunction TranslateSize(layer, labels, layerData) {\r\n    var size;\r\n    if (layer['aes_params']['size']) {\r\n        size = {\r\n            value: layer['aes_params']['size'][\"value\"] * 20\r\n        };\r\n    }\r\n    if (layer['mapping']['size']) {\r\n        if (!layer['mapping']['size']['field']) {\r\n            return size;\r\n        }\r\n        var field = layer['mapping']['size']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        size = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['size'],\r\n            bin: true\r\n        };\r\n    }\r\n    return size;\r\n}\r\nfunction TranslateShape(layer, labels, layerData) {\r\n    var shape;\r\n    if (layer['aes_params']['shape']) {\r\n        shape = {\r\n            value: Number2Shape(layer['aes_params']['shape']['value'], layer[\"geom\"])\r\n        };\r\n    }\r\n    if (layer['mapping']['shape']) {\r\n        if (!layer['mapping']['shape']['field']) {\r\n            return shape;\r\n        }\r\n        var field = layer['mapping']['shape']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        shape = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['shape']\r\n        };\r\n    }\r\n    return shape;\r\n}\r\nfunction TranslateScale(transform) {\r\n    return transform;\r\n}\r\nfunction TranslateStroke(layer, labels, layerData) {\r\n    var stroke;\r\n    if (layer['aes_params']['colour']) {\r\n        stroke = layer['aes_params']['colour'];\r\n    }\r\n    if (layer['mapping']['colour']) {\r\n        if (!layer['mapping']['colour']['field']) {\r\n            return stroke;\r\n        }\r\n        var field = layer['mapping']['colour']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        stroke = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['colour']\r\n        };\r\n    }\r\n    return stroke;\r\n}\r\nfunction TranslateStrokeWidth(layer, labels, layerData) {\r\n    var strokeWidth;\r\n    if (layer['aes_params']['stroke']) {\r\n        strokeWidth = {\r\n            value: layer['aes_params']['stroke'][\"value\"]\r\n        };\r\n    }\r\n    if (layer['mapping']['stroke']) {\r\n        if (!layer['mapping']['stroke']['field']) {\r\n            return strokeWidth;\r\n        }\r\n        var field = layer['mapping']['stroke']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        strokeWidth = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['stroke']\r\n        };\r\n    }\r\n    return strokeWidth;\r\n}\r\nfunction TranslateOpacity(layer, labels, layerData) {\r\n    var opacity;\r\n    if (layer['aes_params']['alpha']) {\r\n        opacity = {\r\n            value: layer['aes_params']['alpha'][\"value\"]\r\n        };\r\n    }\r\n    if (layer['mapping']['alpha']) {\r\n        if (!layer['mapping']['alpha']['field']) {\r\n            return opacity;\r\n        }\r\n        var field = layer['mapping']['alpha']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        opacity = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['stroke']\r\n        };\r\n    }\r\n    return opacity;\r\n}\r\nfunction TranslateFill(layer, labels, layerData) {\r\n    var fill;\r\n    if (layer['aes_params']['fill']) {\r\n        fill = layer['aes_params']['fill'];\r\n    }\r\n    if (layer['mapping']['fill']) {\r\n        if (!layer['mapping']['fill']['field']) {\r\n            return fill;\r\n        }\r\n        var field = layer['mapping']['fill']['field'];\r\n        var type = layerData['metadata'][field]['type'];\r\n        field = field.replace('.', '\\\\.');\r\n        fill = {\r\n            field: field,\r\n            type: type,\r\n            title: labels['colour']\r\n        };\r\n    }\r\n    return fill;\r\n}\r\nfunction Number2Shape(ggShape, geom) {\r\n    var shape = '';\r\n    if (geom['class'] == 'GeomPoint') {\r\n        if (ggShape % 8 == 0) {\r\n            shape = 'circle';\r\n        }\r\n        if (ggShape % 8 == 1) {\r\n            shape = 'square';\r\n        }\r\n        if (ggShape % 8 == 2) {\r\n            shape = 'cross';\r\n        }\r\n        if (ggShape % 8 == 3) {\r\n            shape = 'diamond';\r\n        }\r\n        if (ggShape % 8 == 4) {\r\n            shape = 'triangle-up';\r\n        }\r\n        if (ggShape % 8 == 5) {\r\n            shape = 'triangle-down';\r\n        }\r\n        if (ggShape % 8 == 6) {\r\n            shape = 'triangle-right';\r\n        }\r\n        if (ggShape % 8 == 7) {\r\n            shape = 'triangle-left';\r\n        }\r\n    }\r\n    return shape;\r\n}\r\n","import * as vlspec from './VlSpec';\r\nimport { TranslateEncoding } from './Encoding';\r\n/**\r\n * This function used to translate the LayerSpec\r\n * @param layer\r\n * The layer in ggSpec\r\n * @param ggSpec\r\n */\r\nexport function TranslateLayer(layer, labels, data, scales) {\r\n    var layerData = data[layer['data']];\r\n    var layerspec = {\r\n        data: {\r\n            name: layer['data']\r\n        },\r\n        mark: TranslateMark(layer['geom']),\r\n        encoding: TranslateEncoding(layer, labels, layerData, scales)\r\n    };\r\n    return layerspec;\r\n}\r\nfunction TranslateMark(geom) {\r\n    var mark;\r\n    if (geom['class'] == 'GeomPoint') {\r\n        mark = vlspec.Mark.Point;\r\n    }\r\n    else {\r\n        mark = vlspec.Mark.Point;\r\n    }\r\n    return mark;\r\n}\r\n","import { TranslateLayer } from './LayerSpec';\r\n/**\r\n * Main function to translate ggspec to vlspec\r\n * @param ggSpec\r\n */\r\nexport function gg2vl(ggSpec) {\r\n    var layers = [];\r\n    var labels = ggSpec['labels'];\r\n    var data = ggSpec['data'];\r\n    var scales = ggSpec['scales'];\r\n    for (var _i = 0, _a = ggSpec['layers']; _i < _a.length; _i++) {\r\n        var layer = _a[_i];\r\n        layers.push(TranslateLayer(layer, labels, data, scales));\r\n    }\r\n    var datasets = {};\r\n    for (var dataset in ggSpec['data']) {\r\n        datasets[dataset] = ggSpec['data'][dataset]['observations'];\r\n    }\r\n    var vl = {\r\n        $schema: 'https://vega.github.io/schema/vega-lite/v3.json',\r\n        title: ggSpec['labels']['title'],\r\n        datasets: datasets,\r\n        layer: layers\r\n    };\r\n    removeEmpty(vl);\r\n    return vl;\r\n}\r\n/**\r\n * This function remove empty object in the vlSpec\r\n * @param obj\r\n *\r\n */\r\nfunction removeEmpty(obj) {\r\n    Object.keys(obj).forEach(function (key) {\r\n        if (obj[key] == null || JSON.stringify(obj[key]) == '{}') {\r\n            delete obj[key];\r\n        }\r\n        else if (obj[key] && typeof obj[key] === 'object')\r\n            removeEmpty(obj[key]);\r\n    });\r\n}\r\n"],"names":["vlspec.Mark"],"mappings":"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"}